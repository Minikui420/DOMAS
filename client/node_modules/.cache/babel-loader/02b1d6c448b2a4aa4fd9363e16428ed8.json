{"ast":null,"code":"var _jsxFileName = \"/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx\";\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions';\nimport { Button, Card, Container } from 'react-bootstrap';\nimport Navigation from '../components/header/Navigation';\nimport jwtDecode from 'jwt-decode';\nimport Api from '../api/Api';\nimport '../assets/css/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const {\n        isLogin\n      } = this.props.persist;\n      const token = cookies.get('token');\n\n      if (isLogin === false) {\n        this.props.history.push('/');\n      }\n\n      try {\n        const api = new Api({\n          token\n        });\n        const data = await api.get('/home');\n        console.log(data);\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.action = () => {\n      console.log(100);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"index\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), \"This is home...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.action,\n                variant: \"dark\",\n                children: \"Click me!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {};\n  }\n\n}\n\nHome.getDerivedStateFromProps = async (props, state) => {\n  const api = new Api({});\n  const token = cookies.get('token');\n  const refreshToken = cookies.get('refreshToken');\n  api.interceptors.request.use(async config => {\n    const currentDate = new Date();\n    const decodeToken = jwtDecode(token);\n\n    if (decodeToken.exp * 1000 < currentDate.getTime()) {\n      const refresh = await new Api({\n        refreshToken\n      }).post('/token');\n      config.headers['Authorizatio'] = `Bearer ${refresh.token}`;\n      cookies.set('token', refresh.token);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx"],"names":["connect","Component","withRouter","mapStateToProps","mapDispatchToProps","cookies","Button","Card","Container","Navigation","jwtDecode","Api","Home","constructor","props","componentDidMount","isLogin","persist","token","get","history","push","api","data","console","log","error","action","render","state","getDerivedStateFromProps","refreshToken","interceptors","request","use","config","currentDate","Date","decodeToken","exp","getTime","refresh","post","headers","set","Promise","reject"],"mappings":"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","sourcesContent":["import { Props, State, JWTDecode } from '../interface/Interfaces'\nimport { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions'\nimport { Button, Card, Container } from 'react-bootstrap'\nimport Navigation from '../components/header/Navigation'\nimport jwtDecode from 'jwt-decode'\nimport Api from '../api/Api'\nimport '../assets/css/home.css'\n\n\n\nclass Home extends Component<Props, State> {\n\n    constructor(props: Props){\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    static getDerivedStateFromProps = async (props: Props, state: State) => {\n        const api = new Api({})\n        const token = cookies.get('token')\n        const refreshToken = cookies.get('refreshToken')\n        api.interceptors.request.use(async config => {\n            const currentDate = new Date()\n            const decodeToken: JWTDecode = jwtDecode(token)\n            if(decodeToken.exp * 1000 < currentDate.getTime()){\n                const refresh = await new Api({ refreshToken }).post('/token')\n                config.headers['Authorizatio'] = `Bearer ${refresh.token}`\n                cookies.set('token', refresh.token)\n            }\n            return config\n        }, error => {\n            return Promise.reject(error)\n        })\n\n    }\n\n    componentDidMount = async () => {\n        const { isLogin } = this.props.persist\n        const token = cookies.get('token')\n        if(isLogin === false) {\n            this.props.history.push('/')\n        }\n        try {\n            const api = new Api({ token })\n            const data = await api.get('/home')\n            console.log(data)\n        } catch (error) {\n            console.log(`${error}`)\n        }\n    }\n\n    action = () => {\n        console.log(100)\n    }\n\n    render = (): JSX.Element => {\n\n        return (\n            <>\n                <Navigation />\n                <Container className=\"index\">\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>Home</Card.Title>\n                            <hr/>\n                            This is home...\n                            <br /><br />\n                            <Button onClick={ this.action } variant=\"dark\">Click me!</Button>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}