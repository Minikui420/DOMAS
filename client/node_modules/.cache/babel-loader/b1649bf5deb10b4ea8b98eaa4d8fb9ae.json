{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const hook = createSlice({\n  name: 'domasApp',\n  initialState: {\n    dataLogin: {\n      id: '',\n      admin: false,\n      email: '',\n      username: '',\n      createdAt: ''\n    },\n    isLogin: false\n  },\n  reducers: {\n    setUserDataLogin: (state, action) => {\n      state.dataLogin = action.payload;\n    },\n    setIsLogin: state => {\n      state.isLogin = !state.isLogin;\n    }\n  }\n});\nexport const {\n  setUserDataLogin,\n  setIsLogin\n} = hook.actions;\nexport default hook.reducer;","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/app/hooks.ts"],"names":["createSlice","hook","name","initialState","dataLogin","id","admin","email","username","createdAt","isLogin","reducers","setUserDataLogin","state","action","payload","setIsLogin","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,IAAI,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,UADsB;AAE5BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAE,EADG;AAEPC,MAAAA,KAAK,EAAE,KAFA;AAGPC,MAAAA,KAAK,EAAE,EAHA;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,SAAS,EAAE;AALJ,KADD;AAQVC,IAAAA,OAAO,EAAE;AARC,GAFc;AAY5BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACC,OAAzB;AACH,KAHK;AAINC,IAAAA,UAAU,EAAEH,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACH,OAAN,GAAgB,CAACG,KAAK,CAACH,OAAvB;AACH;AANK;AAZkB,CAAD,CAAxB;AAsBP,OAAO,MAAM;AACTE,EAAAA,gBADS;AACSI,EAAAA;AADT,IAERf,IAAI,CAACgB,OAFH;AAIN,eAAehB,IAAI,CAACiB,OAApB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { UserData } from '../interface/Interfaces'\n\nexport const hook = createSlice({\n    name: 'domasApp',\n    initialState: {\n        dataLogin: {\n            id: '',\n            admin: false,\n            email: '',\n            username: '',\n            createdAt: ''\n        } as UserData['dataLogin'],\n        isLogin: false\n    },\n    reducers: {\n        setUserDataLogin: (state, action) => {\n            state.dataLogin = action.payload as UserData['dataLogin']\n        },\n        setIsLogin: state => {\n            state.isLogin = !state.isLogin\n        }\n    }\n})\n\nexport const { \n    setUserDataLogin, setIsLogin\n } = hook.actions\n\n export default hook.reducer"]},"metadata":{},"sourceType":"module"}