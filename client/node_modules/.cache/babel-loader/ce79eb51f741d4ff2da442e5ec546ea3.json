{"ast":null,"code":"import axios from 'axios';\nexport default class Api {\n  constructor(req) {\n    this.req = void 0;\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    this.get = async path => {\n      try {\n        const {\n          id,\n          token\n        } = this.req;\n\n        switch (path) {\n          case '/user':\n            const user = await this.api.get(path, {\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            return user.data;\n\n          case '/login':\n            const response = await this.api.get(path, {\n              params: {\n                id\n              }\n            });\n            return response.data;\n\n          default:\n            break;\n        }\n      } catch (error) {\n        return error.response.data;\n      }\n    };\n\n    this.post = async path => {\n      try {\n        const response = await this.api.post(path, this.req);\n        return response.data;\n      } catch (error) {\n        return error.response.data;\n      }\n    };\n\n    this.req = req;\n  }\n\n}\nexport const functionalApi = async (path, data) => {\n  var headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  return await fetch(path, {\n    method: 'POST',\n    mode: 'same-origin',\n    redirect: 'follow',\n    credentials: 'include',\n    // Don't forget to specify this if you need cookies\n    headers: headers,\n    body: JSON.stringify(data)\n  });\n};","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/api/Api.ts"],"names":["axios","Api","constructor","req","api","create","baseURL","process","env","REACT_APP_BASE_URL","withCredentials","headers","get","path","id","token","user","data","response","params","error","post","functionalApi","Headers","append","fetch","method","mode","redirect","credentials","body","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,GAAN,CAAU;AAWrBC,EAAAA,WAAW,CAACC,GAAD,EAAU;AAAA,SATbA,GASa;AAAA,SARbC,GAQa,GARPJ,KAAK,CAACK,MAAN,CAAa;AACvBC,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADE;AAEvBC,MAAAA,eAAe,EAAE,IAFM;AAGvBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHc,KAAb,CAQO;;AAAA,SAIrBC,GAJqB,GAIf,MAAOC,IAAP,IAAwB;AAC1B,UAAI;AAEA,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA;AAAN,YAAgB,KAAKZ,GAA3B;;AAEA,gBAAQU,IAAR;AACI,eAAK,OAAL;AACI,kBAAMG,IAAI,GAAG,MAAM,KAAKZ,GAAL,CAASQ,GAAT,CAAaC,IAAb,EAAmB;AAAEF,cAAAA,OAAO,EAAE;AAAE,iCAAkB,UAASI,KAAM;AAAnC;AAAX,aAAnB,CAAnB;AACA,mBAAOC,IAAI,CAACC,IAAZ;;AAEJ,eAAK,QAAL;AACI,kBAAMC,QAAQ,GAAG,MAAM,KAAKd,GAAL,CAASQ,GAAT,CAAaC,IAAb,EAAmB;AAAEM,cAAAA,MAAM,EAAE;AAAEL,gBAAAA;AAAF;AAAV,aAAnB,CAAvB;AACA,mBAAOI,QAAQ,CAACD,IAAhB;;AAEJ;AACI;AAVR;AAaH,OAjBD,CAiBE,OAAOG,KAAP,EAAc;AACZ,eAAOA,KAAK,CAACF,QAAN,CAAeD,IAAtB;AACH;AACJ,KAzBoB;;AAAA,SA2BrBI,IA3BqB,GA2Bd,MAAOR,IAAP,IAAwB;AAC3B,UAAI;AACA,cAAMK,QAAQ,GAAG,MAAM,KAAKd,GAAL,CAASiB,IAAT,CAAcR,IAAd,EAAoB,KAAKV,GAAzB,CAAvB;AACA,eAAOe,QAAQ,CAACD,IAAhB;AACH,OAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,eAAOA,KAAK,CAACF,QAAN,CAAeD,IAAtB;AACH;AACJ,KAlCoB;;AACjB,SAAKd,GAAL,GAAWA,GAAX;AACH;;AAboB;AAiDzB,OAAO,MAAMmB,aAAa,GAAG,OAAOT,IAAP,EAAqBI,IAArB,KAAmC;AAC5D,MAAIN,OAAO,GAAG,IAAIY,OAAJ,EAAd;AACAZ,EAAAA,OAAO,CAACa,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAb,EAAAA,OAAO,CAACa,MAAR,CAAe,QAAf,EAAyB,kBAAzB;AAEA,SAAO,MAAMC,KAAK,CAACZ,IAAD,EAAO;AACrBa,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,IAAI,EAAE,aAFe;AAGrBC,IAAAA,QAAQ,EAAE,QAHW;AAIrBC,IAAAA,WAAW,EAAE,SAJQ;AAIG;AACxBlB,IAAAA,OAAO,EAAEA,OALY;AAMrBmB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,IAAf;AANe,GAAP,CAAlB;AAQH,CAbM","sourcesContent":["import axios from 'axios'\nimport { Req } from '../interface/Interfaces'\n\nexport default class Api {\n    \n    private req: Req\n    private api = axios.create({\n        baseURL: process.env.REACT_APP_BASE_URL,\n        withCredentials: true,\n        headers: {\n            \"Content-Type\": \"application/json\"            \n        }\n    })\n\n    constructor(req: Req){ \n        this.req = req\n    }\n\n    get = async (path: string) => {\n        try {\n\n            const { id, token } = this.req\n\n            switch (path) {\n                case '/user':\n                    const user = await this.api.get(path, { headers: { 'Authorization': `Bearer ${token}` } })\n                    return user.data\n\n                case '/login':\n                    const response = await this.api.get(path, { params: { id } })\n                    return response.data\n            \n                default:\n                    break\n            }\n\n        } catch (error) {\n            return error.response.data\n        }\n    }\n    \n    post = async (path: string) => {\n        try {\n            const response = await this.api.post(path, this.req)\n            return response.data\n        } catch (error) {\n            return error.response.data\n        }\n    }\n}\n\n\nexport const functionalApi = async (path: string, data: any) => {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n\n    return await fetch(path, {\n        method: 'POST',\n        mode: 'same-origin',\n        redirect: 'follow',\n        credentials: 'include', // Don't forget to specify this if you need cookies\n        headers: headers,\n        body: JSON.stringify(data)\n    })\n}"]},"metadata":{},"sourceType":"module"}