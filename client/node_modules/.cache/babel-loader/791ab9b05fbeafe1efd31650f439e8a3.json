{"ast":null,"code":"var _jsxFileName = \"/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx\";\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { mapStateToProps, mapDispatchToProps } from '../app/functions';\nimport Navigation from '../components/header/Navigation';\nimport Api from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const {\n        token,\n        refresh\n      } = this.props.persist.dataToken;\n      const api = new Api({\n        token\n      });\n      const user = await api.get('/user');\n      const {\n        errors\n      } = user;\n\n      if (!errors) {\n        this.props.setUserDataLogin(user);\n      } else {\n        console.log({\n          token: refresh\n        });\n        const api = new Api({\n          token: refresh\n        });\n        const new_token = await api.post('/token');\n        console.log(new_token); // --> end today!\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Home ... \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx"],"names":["connect","Component","withRouter","mapStateToProps","mapDispatchToProps","Navigation","Api","Home","componentDidMount","token","refresh","props","persist","dataToken","api","user","get","errors","setUserDataLogin","console","log","new_token","post","render"],"mappings":";AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,kBAApD;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;;AAGA,MAAMC,IAAN,SAAmBN,SAAnB,CAA2C;AAAA;AAAA;;AAAA,SAGvCO,iBAHuC,GAGnB,YAAY;AAE5B,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,SAA9C;AACA,YAAMC,GAAG,GAAG,IAAIR,GAAJ,CAAQ;AAAEG,QAAAA;AAAF,OAAR,CAAZ;AACA,YAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,GAAJ,CAAQ,OAAR,CAAnB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAaF,IAAnB;;AAEA,UAAG,CAACE,MAAJ,EAAY;AACR,aAAKN,KAAL,CAAWO,gBAAX,CAA4BH,IAA5B;AACH,OAFD,MAEO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEX,UAAAA,KAAK,EAAEC;AAAT,SAAZ;AACA,cAAMI,GAAG,GAAG,IAAIR,GAAJ,CAAQ;AAACG,UAAAA,KAAK,EAAEC;AAAR,SAAR,CAAZ;AACA,cAAMW,SAAS,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,QAAT,CAAxB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAJG,CAIoB;AAC1B;AAGJ,KApBsC;;AAAA,SAsBvCE,MAtBuC,GAsB9B,MAAmB;AAExB,0BACI;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AAQH,KAhCsC;AAAA;;AAAA;;AAoC3C,eAAerB,UAAU,CAACF,OAAO,CAACG,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CG,IAA7C,CAAD,CAAzB","sourcesContent":["import { Props, State } from '../interface/Interfaces'\nimport { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { mapStateToProps, mapDispatchToProps } from '../app/functions'\nimport Navigation from '../components/header/Navigation'\nimport Api from '../api/Api'\n\n\nclass Home extends Component<Props, State> {\n\n\n    componentDidMount = async () => {\n        \n        const { token, refresh } = this.props.persist.dataToken\n        const api = new Api({ token })\n        const user = await api.get('/user')\n        const { errors } = user\n        \n        if(!errors) {\n            this.props.setUserDataLogin(user)\n        } else {\n            console.log({ token: refresh })\n            const api = new Api({token: refresh})\n            const new_token = await api.post('/token')\n            console.log(new_token) // --> end today!\n        }\n        \n\n    }\n\n    render = (): JSX.Element => {\n\n        return (\n            <>\n                <Navigation />\n                <div className=\"index\">\n                    <h1>Home ... </h1>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}