{"ast":null,"code":"var _jsxFileName = \"/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx\";\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions';\nimport { Button, Card, Container } from 'react-bootstrap';\nimport Navigation from '../components/header/Navigation';\nimport jwtDecode from 'jwt-decode';\nimport Api from '../api/Api';\nimport '../assets/css/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const {\n        isLogin\n      } = this.props.persist;\n      const token = cookies.get('token');\n\n      if (isLogin === false || isLogin === undefined) {\n        this.props.history.push('/');\n      } else if (token) {\n        const decode = jwtDecode(token);\n        const {\n          id,\n          username,\n          picture,\n          isAdmin,\n          createdAt\n        } = decode;\n        this.setState({\n          id,\n          username,\n          picture,\n          isAdmin,\n          createdAt\n        });\n      }\n    };\n\n    this.action = () => {\n      console.log(this.state);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"index\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), \"This is home...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.action,\n                variant: \"dark\",\n                children: \"Click me!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {};\n  }\n\n}\n\nHome.getDerivedStateFromProps = async (props, state) => {\n  try {\n    const api = new Api();\n    const home = await api.get('/home');\n    console.log(home);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx"],"names":["connect","Component","withRouter","mapStateToProps","mapDispatchToProps","cookies","Button","Card","Container","Navigation","jwtDecode","Api","Home","constructor","props","componentDidMount","isLogin","persist","token","get","undefined","history","push","decode","id","username","picture","isAdmin","createdAt","setState","action","console","log","state","render","getDerivedStateFromProps","api","home","error"],"mappings":"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","sourcesContent":["import { Props, UserData } from '../interface/Interfaces'\nimport { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions'\nimport { Button, Card, Container } from 'react-bootstrap'\nimport Navigation from '../components/header/Navigation'\nimport jwtDecode from 'jwt-decode'\nimport Api from '../api/Api'\nimport '../assets/css/home.css'\n\n\n\nclass Home extends Component<Props, UserData> {\n\n    constructor(props: Props){\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps = async (props: Props, state: UserData) => {\n        try {\n            const api = new Api()\n            const home: UserData = await api.get('/home')\n            console.log(home)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    componentDidMount = async () => {\n        const { isLogin } = this.props.persist\n        const token: string = cookies.get('token')\n        if(isLogin === false || isLogin === undefined) {\n            this.props.history.push('/')\n        } else if(token){\n            const decode: UserData = jwtDecode(token)\n            const { id, username, picture, isAdmin, createdAt } = decode\n            this.setState({ id, username, picture, isAdmin, createdAt })\n        }\n    }\n\n    action = () => {\n        console.log(this.state)\n    }\n\n    render = (): JSX.Element => {\n\n        return (\n            <>\n                <Navigation />\n                <Container className=\"index\">\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>Home</Card.Title>\n                            <hr/>\n                            This is home...\n                            <br /><br />\n                            <Button onClick={ this.action } variant=\"dark\">Click me!</Button>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}