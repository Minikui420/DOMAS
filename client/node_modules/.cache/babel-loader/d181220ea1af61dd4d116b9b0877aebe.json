{"ast":null,"code":"var _jsxFileName = \"/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Login.tsx\";\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions';\nimport Navigation from '../components/header/Navigation';\nimport Api from '../api/Api';\nimport '../assets/css/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n\n    this.formChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n    };\n\n    this.submit = async () => {\n      try {\n        const api = new Api(this.state);\n        const userData = await api.post('/login');\n        const {\n          token,\n          refreshToken,\n          username\n        } = userData;\n        cookies.set('token', token);\n        cookies.set('refreshToken', refreshToken);\n        this.props.setIsLogin(true);\n        this.props.setUserDataLogin({\n          username\n        });\n        this.props.history.push(`/${username}`);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: this.formChange,\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: this.formChange,\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.submit,\n              variant: \"dark\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Login.tsx"],"names":["connect","Component","withRouter","Card","Form","Button","mapStateToProps","mapDispatchToProps","cookies","Navigation","Api","Login","constructor","props","formChange","e","name","value","target","setState","state","submit","api","userData","post","token","refreshToken","username","set","setIsLogin","setUserDataLogin","history","push","error","console","log","render","email","password"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport { Props, State, UserData } from '../interface/Interfaces'\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions'\nimport Navigation from '../components/header/Navigation'\nimport Api from '../api/Api'\nimport '../assets/css/login.css'\n\n\nclass Login extends Component<Props, State> {\n\n\n    constructor(readonly props: Props){\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    formChange = (e: any): void => {\n        const { name, value } = e.target\n        this.setState({ ...this.state, [name]: value })\n    }\n\n    submit = async () => {\n        try {\n            const api = new Api(this.state)\n            const userData: UserData = await api.post('/login')\n            const { token, refreshToken, username } = userData\n            cookies.set('token', token)\n            cookies.set('refreshToken', refreshToken)\n            this.props.setIsLogin(true)\n            this.props.setUserDataLogin({ username })\n            this.props.history.push(`/${username}`)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render = (): JSX.Element => {\n        return (\n            <>\n                <Navigation />\n                <Card className=\"login\">\n                    <h3>Login</h3>\n                    <br />\n                    <Form.Group>\n                        <Form.Control onChange={ this.formChange } type=\"email\" name=\"email\" placeholder=\"Email\" />\n                        <br />\n                        <Form.Control onChange={ this.formChange } type=\"password\" name=\"password\" placeholder=\"Password\" />\n                        <br />\n                        <Button onClick={ this.submit } variant=\"dark\">Login</Button>\n                    </Form.Group>\n                </Card>\n            </>\n        )\n    }\n\n}\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login))\n\n"]},"metadata":{},"sourceType":"module"}