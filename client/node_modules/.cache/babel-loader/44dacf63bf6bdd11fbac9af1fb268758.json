{"ast":null,"code":"import { setUserDataLogin, setUserDataToken, setIsLogin, reset } from './hooks';\n// import Api from '../api/Api'\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nconst url = process.env.REACT_APP_BASE_URL;\naxios.defaults.withCredentials = true;\nconst axiosInstance = axios.create({\n  baseURL: url,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(async config => {\n  const token = await interceptor();\n\n  if (token || token !== undefined) {\n    config.headers['Authorization'] = token;\n    cookies.set('token', token);\n    return config;\n  }\n\n  return config;\n});\nexport { axiosInstance };\nexport const cookies = new Cookies();\nexport const interceptor = async () => {\n  const refreshToken = cookies.get('refreshToken');\n  const getToken = cookies.get('token');\n\n  try {\n    if (getToken || getToken !== undefined) {\n      const currentTime = new Date();\n      const {\n        exp\n      } = jwtDecode(getToken);\n\n      if (exp * 1000 < currentTime.getTime()) {\n        const dataResponse = await axios.post(`${url}/token`, {\n          refreshToken\n        });\n        const {\n          token\n        } = dataResponse.data;\n        return `Bearer ${token}`;\n      }\n\n      return `Bearer ${getToken}`;\n    }\n  } catch (error) {\n    console.log(`${error}`);\n  }\n};\nexport const mapStateToProps = state => ({\n  persist: state.persist,\n  temporer: state.temporer\n});\nexport const mapDispatchToProps = dispatch => {\n  return {\n    setUserDataLogin: userData => dispatch(setUserDataLogin(userData)),\n    setUserDataToken: userData => dispatch(setUserDataToken(userData)),\n    setIsLogin: data => dispatch(setIsLogin(data)),\n    reset: () => dispatch(reset())\n  };\n};","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/app/functions.ts"],"names":["setUserDataLogin","setUserDataToken","setIsLogin","reset","Cookies","jwtDecode","axios","url","process","env","REACT_APP_BASE_URL","defaults","withCredentials","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","interceptor","undefined","cookies","set","refreshToken","get","getToken","currentTime","Date","exp","getTime","dataResponse","post","data","error","console","log","mapStateToProps","state","persist","temporer","mapDispatchToProps","dispatch","userData"],"mappings":"AAAA,SACIA,gBADJ,EACsBC,gBADtB,EACwCC,UADxC,EAEIC,KAFJ,QAGO,SAHP;AAKA;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAqC,OAArC;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AACAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,MAAMC,aAA4B,GAAIP,KAAK,CAACQ,MAAN,CAAa;AAC/CC,EAAAA,OAAO,EAAER,GADsC;AAE/CS,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFsC,CAAb,CAAtC;AAMAH,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAMC,MAAN,IAAgB;AACnD,QAAMC,KAAK,GAAG,MAAMC,WAAW,EAA/B;;AACA,MAAGD,KAAK,IAAIA,KAAK,KAAKE,SAAtB,EAAgC;AAC5BH,IAAAA,MAAM,CAACJ,OAAP,CAAe,eAAf,IAAkCK,KAAlC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,WAAOD,MAAP;AACH;;AACD,SAAOA,MAAP;AACH,CARD;AAUA,SAASP,aAAT;AAEA,OAAO,MAAMW,OAAO,GAAG,IAAIpB,OAAJ,EAAhB;AAEP,OAAO,MAAMkB,WAAW,GAAG,YAAY;AACnC,QAAMI,YAAY,GAAGF,OAAO,CAACG,GAAR,CAAY,cAAZ,CAArB;AACA,QAAMC,QAAQ,GAAGJ,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAjB;;AACA,MAAI;AACA,QAAGC,QAAQ,IAAIA,QAAQ,KAAKL,SAA5B,EAAsC;AAClC,YAAMM,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAqB1B,SAAS,CAACuB,QAAD,CAApC;;AACA,UAAIG,GAAG,GAAI,IAAR,GAAgBF,WAAW,CAACG,OAAZ,EAAnB,EAAyC;AACrC,cAAMC,YAA0B,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAY,GAAE3B,GAAI,QAAlB,EAA2B;AAAEmB,UAAAA;AAAF,SAA3B,CAAzC;AACA,cAAM;AAAEL,UAAAA;AAAF,YAAYY,YAAY,CAACE,IAA/B;AACA,eAAQ,UAAUd,KAAO,EAAzB;AACH;;AACD,aAAQ,UAAUO,QAAU,EAA5B;AACH;AACJ,GAXD,CAWE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,EAArB;AACH;AACJ,CAjBM;AAoBP,OAAO,MAAMG,eAAe,GAAIC,KAAD,KAA0B;AACrDC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADsC;AAErDC,EAAAA,QAAQ,EAAGF,KAAK,CAACE;AAFoC,CAA1B,CAAxB;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,QAAD,IAAyC;AACvE,SAAO;AACH5C,IAAAA,gBAAgB,EAAG6C,QAAD,IAAwBD,QAAQ,CAAC5C,gBAAgB,CAAC6C,QAAD,CAAjB,CAD/C;AAEH5C,IAAAA,gBAAgB,EAAG4C,QAAD,IAAwBD,QAAQ,CAAC3C,gBAAgB,CAAC4C,QAAD,CAAjB,CAF/C;AAGH3C,IAAAA,UAAU,EAAGiC,IAAD,IAAmBS,QAAQ,CAAC1C,UAAU,CAACiC,IAAD,CAAX,CAHpC;AAIHhC,IAAAA,KAAK,EAAE,MAAMyC,QAAQ,CAACzC,KAAK,EAAN;AAJlB,GAAP;AAMH,CAPM","sourcesContent":["import { \n    setUserDataLogin, setUserDataToken, setIsLogin,\n    reset\n} from './hooks' \nimport { StateToProps, DispatchToProps, UserData, JWTDecode, DataResponse } from '../interface/Interfaces'\n// import Api from '../api/Api'\nimport Cookies from 'universal-cookie'\nimport jwtDecode from 'jwt-decode'\nimport axios, { AxiosInstance } from 'axios'\n\n\nconst url = process.env.REACT_APP_BASE_URL\naxios.defaults.withCredentials = true\n\nconst axiosInstance: AxiosInstance =  axios.create({\n    baseURL: url,\n    headers: {\n        \"Content-Type\": \"application/json\"   \n    }\n})\naxiosInstance.interceptors.request.use(async config => {\n    const token = await interceptor()\n    if(token || token !== undefined){\n        config.headers['Authorization'] = token\n        cookies.set('token', token)\n        return config\n    }\n    return config\n})\n\nexport { axiosInstance }\n\nexport const cookies = new Cookies()\n\nexport const interceptor = async () => {\n    const refreshToken = cookies.get('refreshToken')\n    const getToken = cookies.get('token')\n    try {\n        if(getToken || getToken !== undefined){\n            const currentTime = new Date()\n            const { exp }: JWTDecode = jwtDecode(getToken)\n            if((exp! * 1000) < currentTime.getTime()){\n                const dataResponse: DataResponse = await axios.post(`${url}/token`, { refreshToken })\n                const { token } = dataResponse.data\n                return `Bearer ${ token }`\n            }\n            return `Bearer ${ getToken }`\n        }\n    } catch (error) {\n        console.log(`${error}`)\n    }\n}\n\n\nexport const mapStateToProps = (state: StateToProps) => ({\n    persist: state.persist,\n    temporer : state.temporer\n})\n\nexport const mapDispatchToProps = (dispatch: Function): DispatchToProps => {\n    return {\n        setUserDataLogin: (userData: UserData) => dispatch(setUserDataLogin(userData)),\n        setUserDataToken: (userData: UserData) => dispatch(setUserDataToken(userData)),\n        setIsLogin: (data: boolean) => dispatch(setIsLogin(data)),\n        reset: () => dispatch(reset())\n    }\n}"]},"metadata":{},"sourceType":"module"}