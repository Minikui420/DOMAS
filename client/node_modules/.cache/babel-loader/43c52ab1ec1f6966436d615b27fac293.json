{"ast":null,"code":"import { setUserDataLogin, setUserDataToken, setIsLogin, reset } from './hooks';\nimport Cookies from 'universal-cookie';\nexport const cookies = new Cookies();\nexport const mapStateToProps = state => ({\n  persist: state.persist,\n  temporer: state.temporer\n});\nexport const mapDispatchToProps = dispatch => {\n  return {\n    setUserDataLogin: userData => dispatch(setUserDataLogin(userData)),\n    setUserDataToken: userData => dispatch(setUserDataToken(userData)),\n    setIsLogin: data => dispatch(setIsLogin(data)),\n    reset: () => dispatch(reset())\n  };\n};","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/app/functions.ts"],"names":["setUserDataLogin","setUserDataToken","setIsLogin","reset","Cookies","cookies","mapStateToProps","state","persist","temporer","mapDispatchToProps","dispatch","userData","data"],"mappings":"AAAA,SACIA,gBADJ,EACsBC,gBADtB,EACwCC,UADxC,EAEIC,KAFJ,QAGO,SAHP;AAKA,OAAOC,OAAP,MAAoB,kBAApB;AAIA,OAAO,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEP,OAAO,MAAME,eAAe,GAAIC,KAAD,KAA0B;AACrDC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADsC;AAErDC,EAAAA,QAAQ,EAAGF,KAAK,CAACE;AAFoC,CAA1B,CAAxB;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,QAAD,IAAyC;AACvE,SAAO;AACHX,IAAAA,gBAAgB,EAAGY,QAAD,IAAwBD,QAAQ,CAACX,gBAAgB,CAACY,QAAD,CAAjB,CAD/C;AAEHX,IAAAA,gBAAgB,EAAGW,QAAD,IAAwBD,QAAQ,CAACV,gBAAgB,CAACW,QAAD,CAAjB,CAF/C;AAGHV,IAAAA,UAAU,EAAGW,IAAD,IAAmBF,QAAQ,CAACT,UAAU,CAACW,IAAD,CAAX,CAHpC;AAIHV,IAAAA,KAAK,EAAE,MAAMQ,QAAQ,CAACR,KAAK,EAAN;AAJlB,GAAP;AAMH,CAPM","sourcesContent":["import { \n    setUserDataLogin, setUserDataToken, setIsLogin,\n    reset\n} from './hooks' \nimport { StateToProps, DispatchToProps, UserData } from '../interface/Interfaces'\nimport Cookies from 'universal-cookie'\n\n\n\nexport const cookies = new Cookies()\n\nexport const mapStateToProps = (state: StateToProps) => ({\n    persist: state.persist,\n    temporer : state.temporer\n})\n\nexport const mapDispatchToProps = (dispatch: Function): DispatchToProps => {\n    return {\n        setUserDataLogin: (userData: UserData) => dispatch(setUserDataLogin(userData)),\n        setUserDataToken: (userData: UserData) => dispatch(setUserDataToken(userData)),\n        setIsLogin: (data: boolean) => dispatch(setIsLogin(data)),\n        reset: () => dispatch(reset())\n    }\n}"]},"metadata":{},"sourceType":"module"}