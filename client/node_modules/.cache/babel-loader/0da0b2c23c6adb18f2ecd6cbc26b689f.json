{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const hook = createSlice({\n  name: 'domasApp',\n  initialState: {\n    toResult: false,\n    activity: 'KTP',\n    kk_data: {\n      no_kk: '',\n      family_head: '',\n      rt_rw: '',\n      village: 'DOMAS',\n      distric: 'PONTANG',\n      city: 'SERANG',\n      zip: '42192',\n      province: 'BANTEN'\n    }\n  },\n  reducers: {\n    setToResult: (state, action) => {\n      state.toResult = action.payload;\n    },\n    setKKData: (state, action) => {\n      state.kk_data = action.payload;\n    },\n    setActivity: (state, action) => {\n      state.activity = action.payload;\n    },\n    setPath: (state, action) => {\n      state.path = action.payload;\n    },\n    setUserDataToken: (state, action) => {\n      state.dataToken = action.payload;\n    },\n    setUserDataLogin: (state, action) => {\n      state.dataLogin = action.payload;\n    },\n    setIsLogin: (state, action) => {\n      state.isLogin = action.payload;\n    },\n    reset: state => {\n      state.dataLogin = {};\n      state.dataToken = {};\n      state.isLogin = false;\n      state.toResult = false;\n      state.path = undefined;\n    }\n  }\n});\nexport const {\n  setUserDataLogin,\n  setIsLogin,\n  setUserDataToken,\n  setPath,\n  setActivity,\n  setKKData,\n  setToResult,\n  reset\n} = hook.actions;\nexport default hook.reducer;","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/app/hooks.ts"],"names":["createSlice","hook","name","initialState","toResult","activity","kk_data","no_kk","family_head","rt_rw","village","distric","city","zip","province","reducers","setToResult","state","action","payload","setKKData","setActivity","setPath","path","setUserDataToken","dataToken","setUserDataLogin","dataLogin","setIsLogin","isLogin","reset","undefined","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,OAAO,MAAMC,IAAI,GAAGD,WAAW,CAAC;AAE5BE,EAAAA,IAAI,EAAE,UAFsB;AAG5BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAE,KADD;AAETC,IAAAA,QAAQ,EAAE,KAFD;AAGTC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,WAAW,EAAE,EAFR;AAGLC,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,OAAO,EAAE,OAJJ;AAKLC,MAAAA,OAAO,EAAE,SALJ;AAMLC,MAAAA,IAAI,EAAE,QAND;AAOLC,MAAAA,GAAG,EAAE,OAPA;AAQLC,MAAAA,QAAQ,EAAE;AARL;AAHA,GAHe;AAiB5BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAACC,OAAxB;AACH,KAHK;AAINC,IAAAA,SAAS,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACX,OAAN,GAAgBY,MAAM,CAACC,OAAvB;AACH,KANK;AAONE,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACZ,QAAN,GAAiBa,MAAM,CAACC,OAAxB;AACH,KATK;AAUNG,IAAAA,OAAO,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACM,IAAN,GAAaL,MAAM,CAACC,OAApB;AACH,KAZK;AAaNK,IAAAA,gBAAgB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACC,OAAzB;AACH,KAfK;AAgBNO,IAAAA,gBAAgB,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACU,SAAN,GAAkBT,MAAM,CAACC,OAAzB;AACH,KAlBK;AAmBNS,IAAAA,UAAU,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACY,OAAN,GAAgBX,MAAM,CAACC,OAAvB;AACH,KArBK;AAsBNW,IAAAA,KAAK,EAAEb,KAAK,IAAI;AACZA,MAAAA,KAAK,CAACU,SAAN,GAAkB,EAAlB;AACAV,MAAAA,KAAK,CAACQ,SAAN,GAAkB,EAAlB;AACAR,MAAAA,KAAK,CAACY,OAAN,GAAgB,KAAhB;AACAZ,MAAAA,KAAK,CAACb,QAAN,GAAiB,KAAjB;AACAa,MAAAA,KAAK,CAACM,IAAN,GAAaQ,SAAb;AACH;AA5BK;AAjBkB,CAAD,CAAxB;AAiDP,OAAO,MAAM;AACTL,EAAAA,gBADS;AACSE,EAAAA,UADT;AACqBJ,EAAAA,gBADrB;AAETF,EAAAA,OAFS;AAEAD,EAAAA,WAFA;AAEaD,EAAAA,SAFb;AAEwBJ,EAAAA,WAFxB;AAEqCc,EAAAA;AAFrC,IAGR7B,IAAI,CAAC+B,OAHH;AAKN,eAAe/B,IAAI,CAACgC,OAApB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { StoreData } from '../interface/Interfaces'\n\n\nexport const hook = createSlice({\n\n    name: 'domasApp',\n    initialState:{\n        toResult: false,\n        activity: 'KTP',\n        kk_data: {\n            no_kk: '',\n            family_head: '',\n            rt_rw: '',\n            village: 'DOMAS',\n            distric: 'PONTANG',\n            city: 'SERANG',\n            zip: '42192',\n            province: 'BANTEN'\n        } \n    } as StoreData,\n    reducers: {\n        setToResult: (state, action) => {\n            state.toResult = action.payload\n        },\n        setKKData: (state, action) => {\n            state.kk_data = action.payload\n        },\n        setActivity: (state, action) => {\n            state.activity = action.payload\n        },\n        setPath: (state, action) => {\n            state.path = action.payload\n        },\n        setUserDataToken: (state, action) => {\n            state.dataToken = action.payload\n        },\n        setUserDataLogin: (state, action) => {\n            state.dataLogin = action.payload\n        },\n        setIsLogin: (state, action) => {\n            state.isLogin = action.payload\n        },\n        reset: state => {\n            state.dataLogin = {}\n            state.dataToken = {}\n            state.isLogin = false\n            state.toResult = false\n            state.path = undefined\n        }\n    }\n})\n\nexport const { \n    setUserDataLogin, setIsLogin, setUserDataToken,\n    setPath, setActivity, setKKData, setToResult, reset\n } = hook.actions\n\n export default hook.reducer"]},"metadata":{},"sourceType":"module"}