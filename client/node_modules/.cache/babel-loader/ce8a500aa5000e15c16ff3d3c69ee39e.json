{"ast":null,"code":"import axios from 'axios';\nimport { interceptor } from '../app/functions';\nexport default class Api {\n  constructor(req) {\n    this.req = void 0;\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    this.get = async path => {\n      try {\n        const {\n          id\n        } = this.req;\n\n        switch (path) {\n          case '/home':\n            const user = await this.api.get(path);\n            return user.data;\n\n          case '/login':\n            const response = await this.api.get(path, {\n              params: {\n                id\n              }\n            });\n            return response.data;\n\n          default:\n            break;\n        }\n      } catch (error) {\n        return error.response.data;\n      }\n    };\n\n    this.post = async path => {\n      try {\n        const response = await this.api.post(path, this.req);\n        return response.data;\n      } catch (error) {\n        return error.response.data;\n      }\n    };\n\n    this.req = req;\n    this.api.defaults.headers['Authorization'] = interceptor();\n  }\n\n}","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/api/Api.ts"],"names":["axios","interceptor","Api","constructor","req","api","create","baseURL","process","env","REACT_APP_BASE_URL","withCredentials","headers","get","path","id","user","data","response","params","error","post","defaults"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAkBC,WAAlB,QAAqC,kBAArC;AAIA,eAAe,MAAMC,GAAN,CAAU;AAWrBC,EAAAA,WAAW,CAACC,GAAD,EAAiB;AAAA,SATpBA,GASoB;AAAA,SARpBC,GAQoB,GARdL,KAAK,CAACM,MAAN,CAAa;AACvBC,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADE;AAEvBC,MAAAA,eAAe,EAAE,IAFM;AAGvBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHc,KAAb,CAQc;;AAAA,SAK5BC,GAL4B,GAKtB,MAAOC,IAAP,IAAwB;AAC1B,UAAI;AAEA,cAAM;AAAEC,UAAAA;AAAF,YAAS,KAAKX,GAApB;;AAEA,gBAAQU,IAAR;AACI,eAAK,OAAL;AACI,kBAAME,IAAI,GAAG,MAAM,KAAKX,GAAL,CAASQ,GAAT,CAAaC,IAAb,CAAnB;AACA,mBAAOE,IAAI,CAACC,IAAZ;;AAEJ,eAAK,QAAL;AACI,kBAAMC,QAAQ,GAAG,MAAM,KAAKb,GAAL,CAASQ,GAAT,CAAaC,IAAb,EAAmB;AAAEK,cAAAA,MAAM,EAAE;AAAEJ,gBAAAA;AAAF;AAAV,aAAnB,CAAvB;AACA,mBAAOG,QAAQ,CAACD,IAAhB;;AAEJ;AACI;AAVR;AAaH,OAjBD,CAiBE,OAAOG,KAAP,EAAc;AACZ,eAAOA,KAAK,CAACF,QAAN,CAAeD,IAAtB;AACH;AACJ,KA1B2B;;AAAA,SA4B5BI,IA5B4B,GA4BrB,MAAOP,IAAP,IAAwB;AAC3B,UAAI;AACA,cAAMI,QAAQ,GAAG,MAAM,KAAKb,GAAL,CAASgB,IAAT,CAAcP,IAAd,EAAoB,KAAKV,GAAzB,CAAvB;AACA,eAAOc,QAAQ,CAACD,IAAhB;AACH,OAHD,CAGE,OAAOG,KAAP,EAAc;AACZ,eAAOA,KAAK,CAACF,QAAN,CAAeD,IAAtB;AACH;AACJ,KAnC2B;;AACxB,SAAKb,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,CAASiB,QAAT,CAAkBV,OAAlB,CAA0B,eAA1B,IAA6CX,WAAW,EAAxD;AACH;;AAdoB","sourcesContent":["import axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport { cookies, interceptor } from '../app/functions'\nimport { JWTDecode, Req } from '../interface/Interfaces'\n\n\nexport default class Api {\n    \n    private req: Req\n    private api = axios.create({\n        baseURL: process.env.REACT_APP_BASE_URL,\n        withCredentials: true,\n        headers: {\n            \"Content-Type\": \"application/json\"      \n        }\n    })\n    \n    constructor(req: Req | null){ \n        this.req = req!\n        this.api.defaults.headers['Authorization'] = interceptor()\n    }\n\n    get = async (path: string) => {\n        try {\n\n            const { id } = this.req\n\n            switch (path) {\n                case '/home':\n                    const user = await this.api.get(path)\n                    return user.data\n\n                case '/login':\n                    const response = await this.api.get(path, { params: { id } })\n                    return response.data\n            \n                default:\n                    break\n            }\n\n        } catch (error) {\n            return error.response.data\n        }\n    }\n    \n    post = async (path: string) => {\n        try {\n            const response = await this.api.post(path, this.req)\n            return response.data\n        } catch (error) {\n            return error.response.data\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}