{"ast":null,"code":"var _jsxFileName = \"/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx\";\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions';\nimport { Button, Card, Container } from 'react-bootstrap';\nimport Navigation from '../components/header/Navigation';\nimport jwtDecode from 'jwt-decode';\nimport Api from '../api/Api';\nimport '../assets/css/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const {\n        isLogin\n      } = this.props.persist;\n      const token = cookies.get('token');\n      const refreshToken = cookies.get('refreshToken');\n\n      if (isLogin === false) {\n        this.props.history.push('/');\n      }\n\n      try {\n        const api = new Api({\n          token\n        });\n        api.interceptors.request.use(async config => {\n          const currentDate = new Date();\n          const decodeToken = jwtDecode(token);\n\n          if (decodeToken.exp * 1000 < currentDate.getTime()) {\n            const refresh = await new Api({\n              refreshToken\n            }).post('/token');\n            cookies.set('token', refresh.token);\n            console.log(`Token refreshed!`);\n          }\n\n          const data = await api.get('/home');\n          console.log(data);\n        });\n      } catch (error) {\n        console.log(`${error}`);\n      }\n    };\n\n    this.action = () => {\n      console.log(100);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"index\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), \"This is home...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.action,\n                variant: \"dark\",\n                children: \"Click me!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/inim/Documents/Data/DESA/DOMAS/client/src/pages/Home.tsx"],"names":["connect","Component","withRouter","mapStateToProps","mapDispatchToProps","cookies","Button","Card","Container","Navigation","jwtDecode","Api","Home","componentDidMount","isLogin","props","persist","token","get","refreshToken","history","push","api","interceptors","request","use","config","currentDate","Date","decodeToken","exp","getTime","refresh","post","set","console","log","data","error","action","render"],"mappings":"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","sourcesContent":["import { Props, State, JWTDecode } from '../interface/Interfaces'\nimport { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { mapStateToProps, mapDispatchToProps, cookies } from '../app/functions'\nimport { Button, Card, Container } from 'react-bootstrap'\nimport Navigation from '../components/header/Navigation'\nimport jwtDecode from 'jwt-decode'\nimport Api from '../api/Api'\nimport '../assets/css/home.css'\n\n\n\nclass Home extends Component<Props, State> {\n\n    componentDidMount = async () => {\n        const { isLogin } = this.props.persist\n        const token = cookies.get('token')\n        const refreshToken = cookies.get('refreshToken')\n        if(isLogin === false) {\n            this.props.history.push('/')\n        }\n        \n        try {\n            const api = new Api({ token })\n            api.interceptors.request.use(async config => {\n                const currentDate = new Date()\n                const decodeToken: JWTDecode = jwtDecode(token)\n                if(decodeToken.exp * 1000 < currentDate.getTime()){\n                    const refresh = await new Api({ refreshToken }).post('/token')\n                    cookies.set('token', refresh.token)\n                    console.log(`Token refreshed!`)\n                }\n                const data = await api.get('/home')\n                console.log(data)\n            })\n        } catch (error) {\n            console.log(`${error}`)\n        }\n\n    }\n\n    action = () => {\n        console.log(100)\n    }\n\n    render = (): JSX.Element => {\n\n        return (\n            <>\n                <Navigation />\n                <Container className=\"index\">\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>Home</Card.Title>\n                            <hr/>\n                            This is home...\n                            <br /><br />\n                            <Button onClick={ this.action } variant=\"dark\">Click me!</Button>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}